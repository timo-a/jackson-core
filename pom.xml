<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!-- This module was also published with a richer model, Gradle metadata,  -->
  <!-- which should be used instead. Do not delete the following line which  -->
  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->
  <!-- that they should prefer consuming it instead. -->
  <!-- do_not_remove: published-with-gradle-metadata -->
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>tools.jackson</groupId>
    <artifactId>jackson-base</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <groupId>tools.jackson.core</groupId>
  <artifactId>jackson-core</artifactId>
  <name>Jackson-core</name>
  <version>3.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>Core Jackson processing abstractions (aka Streaming API), implementation for JSON</description>
  <inceptionYear>2007</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <url>https://github.com/FasterXML/jackson-core</url>
  <scm>
    <connection>scm:git:https://github.com/FasterXML/jackson-core.git</connection>
    <developerConnection>scm:git:git@github.com:FasterXML/jackson-core.git</developerConnection>
    <url>http://github.com/FasterXML/jackson-core</url>    
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- Baseline Android SDK compatibility:

         * Jackson 3.0 compatible with Android SDK 26 and up
      -->
    <version.android.sdk>26</version.android.sdk>
    <version.android.sdk.signature>0.5.1</version.android.sdk.signature>
    <version.plugin.animal-sniffer>1.23</version.plugin.animal-sniffer>

    <osgi.export>tools.jackson.core;version=${project.version},
tools.jackson.core.*;version=${project.version}
    </osgi.export>
    <osgi.import>!ch.randelshofer.fastdoubleparser, *</osgi.import>

    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>tools/jackson/core/json</packageVersion.dir>
    <packageVersion.package>${project.groupId}.json</packageVersion.package>

    <!-- for Reproducible Builds -->
    <project.build.outputTimestamp>2022-11-27T00:00:00Z</project.build.outputTimestamp>
  </properties>

  <!-- Alas, need to include snapshot reference since otherwise can not find
       snapshot of parent... -->
  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.plugin.surefire}</version>
        <configuration>
          <redirectTestOutputToFile>${surefire.redirectTestOutputToFile}</redirectTestOutputToFile>
          <excludes>
            <exclude>**/failing/**/*.java</exclude>
          </excludes>
<!-- 13-Apr-2018, tatu: for debugging [core#400]
          <systemPropertyVariables>
<tools.jackson.core.util.BufferRecyclers.trackReusableBuffers>true</tools.jackson.core.util.BufferRecyclers.trackReusableBuffers>
          </systemPropertyVariables>
-->
        </configuration>
      </plugin>
      <plugin> <!-- default settings are fine, just need to enable here -->
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
      </plugin>

      <!--  04-Mar-2019, tatu: Add rudimentary JDK9+ module info. To build with JDK 8
             will have to use `moduleInfoFile` as anything else requires JDK 9+
        -->
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
      </plugin>
      <!-- 03-Nov-2020, tatu: Add LICENSE from main level -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <minimizeJar>true</minimizeJar>
        </configuration>
        <executions>
          <execution>
            <id>shade-jackson-core</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>ch.randelshofer:fastdoubleparser</artifact>
                  <excludes>
                    <exclude>META-INF/versions/**/module-info.*</exclude>
		    <!-- 10-Dec-2023, pjfanning: due to
                        https://github.com/wrandelshofer/FastDoubleParser/issues/79
                      -->
                    <exclude>META-INF/versions/22/**/*.*</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>ch/randelshofer/fastdoubleparser</pattern>
                  <shadedPattern>com/fasterxml/jackson/core/io/doubleparser</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/LICENSE</pattern>
                  <shadedPattern>META-INF/FastDoubleParser-LICENSE</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/NOTICE</pattern>
                  <shadedPattern>META-INF/FastDoubleParser-NOTICE</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/jackson-core-LICENSE</pattern>
                  <shadedPattern>META-INF/LICENSE</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/jackson-core-NOTICE</pattern>
                  <shadedPattern>META-INF/NOTICE</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/versions/11/ch/randelshofer/fastdoubleparser</pattern>
                  <shadedPattern>META-INF/versions/11/com/fasterxml/jackson/core/io/doubleparser</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/versions/17/ch/randelshofer/fastdoubleparser</pattern>
                  <shadedPattern>META-INF/versions/17/com/fasterxml/jackson/core/io/doubleparser</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/versions/21/ch/randelshofer/fastdoubleparser</pattern>
                  <shadedPattern>META-INF/versions/21/com/fasterxml/jackson/core/io/doubleparser</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.jjohannes</groupId>
        <artifactId>gradle-module-metadata-maven-plugin</artifactId>
	<!-- 27-Apr-2023, tatu: [core#999]: Need to exclude shaded FDP
	   dependency from GMM
	  -->
	<configuration>
          <removedDependencies>
            <dependency>
              <groupId>ch.randelshofer</groupId>
              <artifactId>fastdoubleparser</artifactId>
            </dependency>
          </removedDependencies>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Multi-Release>true</Multi-Release>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- 23-Mar-2023, tatu: [core#965] Need to put back Gradle module metadata marker -->
      <plugin>
        <groupId>io.github.floverfelt</groupId>
        <artifactId>find-and-replace-maven-plugin</artifactId>
        <version>1.1.0</version>
        <executions>
          <execution>
            <id>exec</id>
            <phase>package</phase>
            <goals>
              <goal>find-and-replace</goal>
            </goals>
            <configuration>
              <replacementType>file-contents</replacementType>
              <baseDir>${basedir}</baseDir>
              <findRegex><![CDATA[<modelVersion>4.0.0</modelVersion>]]></findRegex>
              <fileMask>dependency-reduced-pom.xml</fileMask>
              <replaceValue><![CDATA[  <!-- This module was also published with a richer model, Gradle metadata,  -->
  <!-- which should be used instead. Do not delete the following line which  -->
  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->
  <!-- that they should prefer consuming it instead. -->
  <!-- do_not_remove: published-with-gradle-metadata -->
  <modelVersion>4.0.0</modelVersion>]]></replaceValue>
              <recursive>false</recursive>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 16-Nov-2022, tatu: [core#838] add verification of compatibility
           wrt Android SDK versions using AnimalSniffer with "gummy bears" signatures.
           To be run from CI, but manually with:
              mvn clean package animal-sniffer:check
        -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>${version.plugin.animal-sniffer}</version>
        <configuration>
          <signature>
            <groupId>com.toasttab.android</groupId>
            <artifactId>gummy-bears-api-${version.android.sdk}</artifactId>
            <version>${version.android.sdk.signature}</version>
          </signature>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- 29-Nov-2022, tatu: As per [core#843] we now shade in fastdoubleparser -->
    <dependency>
      <groupId>ch.randelshofer</groupId>
      <artifactId>fastdoubleparser</artifactId>
      <version>1.0.0</version>
    </dependency>
    
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>openrewrite</id>
      <!-- `mvn -P openrewrite org.openrewrite.maven:rewrite-maven-plugin:run` -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.openrewrite.maven</groupId>
            <artifactId>rewrite-maven-plugin</artifactId>
            <version>5.23.1</version>
            <configuration>
              <activeRecipes>
                <!-- common static analysis issues
                     https://docs.openrewrite.org/recipes/staticanalysis/commonstaticanalysis -->
                <recipe>org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet</recipe>
                <recipe>org.openrewrite.staticanalysis.BigDecimalDoubleConstructorRecipe</recipe>
                <recipe>org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums</recipe>
                <recipe>org.openrewrite.staticanalysis.BooleanChecksNotInverted</recipe>
                <recipe>org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase</recipe>
                <recipe>org.openrewrite.staticanalysis.CatchClauseOnlyRethrows</recipe>
                <recipe>org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls</recipe>
                <recipe>org.openrewrite.staticanalysis.CovariantEquals</recipe>
                <recipe>org.openrewrite.staticanalysis.DefaultComesLast</recipe>
                <recipe>org.openrewrite.staticanalysis.EmptyBlock</recipe>
                <recipe>org.openrewrite.staticanalysis.EqualsAvoidsNull</recipe>
                <recipe>org.openrewrite.staticanalysis.ExplicitInitialization</recipe>
                <recipe>org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor</recipe>
                <recipe>org.openrewrite.staticanalysis.FinalizePrivateFields</recipe>
                <recipe>org.openrewrite.staticanalysis.FallThrough</recipe>
                <recipe>org.openrewrite.staticanalysis.FinalClass</recipe>
                <recipe>org.openrewrite.staticanalysis.FixStringFormatExpressions</recipe>
                <recipe>org.openrewrite.staticanalysis.ForLoopIncrementInUpdate</recipe>
                <recipe>org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition</recipe>
                <recipe>org.openrewrite.staticanalysis.IndexOfReplaceableByContains</recipe>
                <recipe>org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero</recipe>
                <recipe>org.openrewrite.staticanalysis.InlineVariable</recipe>
                <recipe>org.openrewrite.staticanalysis.IsEmptyCallOnCollections</recipe>
                <recipe>org.openrewrite.staticanalysis.LambdaBlockToExpression</recipe>
                <recipe>org.openrewrite.staticanalysis.MethodNameCasing</recipe>
                <recipe>org.openrewrite.staticanalysis.MinimumSwitchCases</recipe>
                <recipe>org.openrewrite.staticanalysis.ModifierOrder</recipe>
                <recipe>org.openrewrite.staticanalysis.MultipleVariableDeclarations</recipe>
                <recipe>org.openrewrite.staticanalysis.NeedBraces</recipe>
                <recipe>org.openrewrite.staticanalysis.NestedEnumsAreNotStatic</recipe>
                <recipe>org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument</recipe>
                <recipe>org.openrewrite.staticanalysis.NoDoubleBraceInitialization</recipe>
                <recipe>org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType</recipe>
                <recipe>org.openrewrite.staticanalysis.NoEqualityInForCondition</recipe>
                <recipe>org.openrewrite.staticanalysis.NoFinalizer</recipe>
                <recipe>org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo</recipe>
                <recipe>org.openrewrite.staticanalysis.NoRedundantJumpStatements</recipe>
                <recipe>org.openrewrite.staticanalysis.NoToStringOnStringType</recipe>
                <recipe>org.openrewrite.staticanalysis.NoValueOfOnStringType</recipe>
                <recipe>org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper</recipe>
                <recipe>org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf</recipe>
                <recipe>org.openrewrite.staticanalysis.RedundantFileCreation</recipe>
                <recipe>org.openrewrite.staticanalysis.RemoveExtraSemicolons</recipe>
                <recipe>org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase</recipe>
                <recipe>org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrTostring</recipe>
                <!-- clashes with code style because it removes leading underscore -->
                <!--recipe>org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase</recipe-->
                <recipe>org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference</recipe>
                <recipe>org.openrewrite.staticanalysis.ReplaceStringBuilderWithString</recipe>
                <recipe>org.openrewrite.staticanalysis.SimplifyBooleanExpression</recipe>
                <recipe>org.openrewrite.staticanalysis.SimplifyBooleanReturn</recipe>
                <recipe>org.openrewrite.staticanalysis.StaticMethodNotFinal</recipe>
                <recipe>org.openrewrite.staticanalysis.StringLiteralEquality</recipe>
                <recipe>org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources</recipe>
                <recipe>org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments</recipe>
                <recipe>org.openrewrite.staticanalysis.UnnecessaryParentheses</recipe>
                <recipe>org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations</recipe>
                <recipe>org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes</recipe>
                <recipe>org.openrewrite.staticanalysis.UseDiamondOperator</recipe>
                <recipe>org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations</recipe>
                <recipe>org.openrewrite.staticanalysis.WhileInsteadOfFor</recipe>
                <recipe>org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal</recipe>

                <!-- prefer assertj -->
                <!-- too resource intensive at the moment?! -->
                <!--recipe>org.openrewrite.java.testing.assertj.Assertj</recipe-->


              </activeRecipes>
              <failOnDryRunResults>true</failOnDryRunResults>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.openrewrite.recipe</groupId>
                <artifactId>rewrite-static-analysis</artifactId>
                <version>1.4.2</version>
              </dependency>
              <dependency>
                <groupId>org.openrewrite.recipe</groupId>
                <artifactId>rewrite-testing-frameworks</artifactId>
                <version>2.6.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
